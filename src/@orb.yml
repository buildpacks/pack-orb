version: 2.1
description: Cloud Native Buildpacks Orb

display:
  source_url: "https://github.com/buildpacks/pack-orb"
  home_url: "https://buildpacks.io/"

jobs:
  build:
    description: "Build OCI Image"
    machine:
      image: << parameters.executor-image >>
    parameters:
      builder:
        type: string
        description: Builder image name to use.
      image-name:
        type: string
        description: Image name (aka tag) of the app image to be produced.
      working-directory:
        type: string
        description: The directory where the app source is located.
        default: ""
      buildpacks:
        type: string
        description: The specific buildpacks to execute. Semicolon (;) delimited.
        default: ""
      env-vars:
        type: string
        description: Build-time environment variables. Semicolon (;) delimited.
        default: ""
      tags:
        type: string
        description: Additional image names to create. Semicolon (;) delimited.
        default: ""
      image-file:
        type: string
        description: Filename to save the app image as locally.
        default: "image.tgz"
      version:
        type: string
        description: Version of 'pack' to use.
        default: 0.32.1
      after-checkout:
        description: Optional steps to run after checking out the code.
        type: steps
        default: []
      executor-image:
        type: string
        description: Image to execute 'pack' in.
        default: ubuntu-2004:202010-01
    steps:
      - run: sudo chown -R circleci /var/lib/docker/volumes
      - install-pack:
          version: << parameters.version >>
      - checkout
      - when:
          name: Run after-checkout lifecycle hook steps.
          condition: << parameters.after-checkout >>
          steps: << parameters.after-checkout >>
      - pack-build:
          builder: << parameters.builder >>
          image-name: << parameters.image-name >>
          path: << parameters.working-directory >>
          buildpacks: << parameters.buildpacks >>
          env-vars: << parameters.env-vars >>
          tags: << parameters.tags >>
      - save-image-to-workspace:
          image-name: << parameters.image-name >>
          image-file: << parameters.image-file >>
commands:
  install-pack:
    description: "Setup and install pack"
    parameters:
      install-dir:
        default: ~/bin
        description: |
          Directory in which to install Pack binary
        type: string
      version:
        type: string
        default: 0.32.1
    steps:
      - run:
          name: "Setup and install pack"
          command: |
            mkdir -p << parameters.install-dir >>
            curl -L --fail --retry 3 --connect-timeout 5 --max-time 60 "https://github.com/buildpack/pack/releases/download/v<< parameters.version >>/pack-v<< parameters.version >>-linux.tgz" | tar xzm -C << parameters.install-dir >>
            export PATH="$PATH:<< parameters.install-dir >>"
            mkdir -p ~/.docker/
            if [ ! -f ~/.docker/config.json ]; then
              echo "{}" > ~/.docker/config.json
            fi
